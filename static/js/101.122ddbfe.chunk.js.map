{"version":3,"file":"static/js/101.122ddbfe.chunk.js","mappings":"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","sources":["components/TypeText.js","components/Work/Work.js"],"sourcesContent":["import { Box, Typography } from \"@mui/material\";\nimport { styled } from \"@mui/material/styles\";\nimport { useEffect } from \"react\";\nimport { titleFont } from \"theme\";\n\nconst TitleBox = styled(({ id, sx, ...props }) => (\n    <Box {...props}>\n        <Typography\n            variant=\"h2\"\n            id={id}\n            sx={{\n                display: \"inline\",\n                fontSize: \"inherit\",\n                fontFamily: titleFont,\n                fontWeight: 500,\n                ...sx\n            }}\n        />\n    </Box>\n))(({ theme }) => ({\n    fontSize: \"3.6rem\",\n    lineHeight: 1.2,\n    textAlign: \"center\",\n    \"& .typed-cursor\": {\n        fontSize: \"inherit\",\n    },\n}));\n\nexport default function TypeTitle({ title, id, sx }) {\n    useEffect(() => {\n        const typingTitle = new window.Typed(`#${id}`, {\n            strings: [title],\n            typeSpeed: 36,\n            cursorChar: \"_\",\n            startDelay: 640,\n        });\n\n        return () => typingTitle.destroy();\n    }, [title, id]);\n\n    return (\n        <TitleBox id={id} sx={sx} />\n    );\n};","import { Box, Link, Stack } from \"@mui/material\";\nimport TypeTitle from \"components/TypeText\";\nimport data from \"./WorkData.json\"\nimport { useScroll, useTransform, motion } from \"framer-motion\";\nimport { useRef } from \"react\";\nimport { styled } from \"@mui/material/styles\";\n\nconst WorkImg = styled(\"img\")(({ theme }) => ({\n    maxWidth: \"36%\",\n    height: \"100%\",\n    [theme.breakpoints.up(\"md\")]: {\n        width: \"16rem\",\n    },\n    [theme.breakpoints.up(\"lg\")]: {\n        width: \"18rem\",\n    },\n}));\n\nconst TextBox = styled(Box)(({ theme }) => ({\n    fontSize: \"1.2rem\",\n    display: \"block\",\n    width: \"100%\",\n    paddingLeft: \"3vw\",\n    textAlign: \"right\",\n    textTransform: \"lowercase\",\n    [theme.breakpoints.up(\"sm\")]: {\n        fontSize: \"1.36rem\",\n    },\n    [theme.breakpoints.up(\"md\")]: {\n        fontSize: \"1.44rem\",\n    },\n    [theme.breakpoints.up(\"lg\")]: {\n        fontSize: \"1.6rem\",\n    },\n}));\n\nconst NoWrapSpan = styled(\"span\")({\n    whiteSpace: \"nowrap\",\n});\n\nconst WorkItem = ({ title, image, company, time, href }) => {\n    const targetRef = useRef(null);\n    const { scrollYProgress } = useScroll({\n        target: targetRef,\n        offset: [\"start end\", \"end start\"],\n    });\n\n    const y = useTransform(scrollYProgress, [0, 0.32], [120, 0]);\n    const scale = useTransform(scrollYProgress, [0, 0.36], [0.92, 1]);\n    const opacity = useTransform(scrollYProgress, [0.75, 1], [1, 0]);\n\n    return (\n        <motion.div style={{ y, opacity, scale }}>\n            <Stack direction=\"row\" spacing={2} ref={targetRef} justifyContent=\"space-between\" alignItems=\"center\" paddingLeft=\"1.5vw\" paddingRight=\"1.5vw\">\n                <WorkImg src={image} alt={`${title}-logo`} />\n                <TextBox>\n                    <NoWrapSpan>{title}</NoWrapSpan>, <Link color=\"secondary\" href={href} variant=\"span\" sx={{ paddingLeft: \"0.16rem\", whiteSpace: \"nowrap\" }}>{company}</Link>, <NoWrapSpan>{time}</NoWrapSpan>\n                </TextBox>\n            </Stack>\n        </motion.div>\n    );\n};\n\nexport default function Work(props) {\n    return (\n        <Stack spacing={8} id=\"projects\">\n            <TypeTitle id=\"industry\" title=\"industrial experience\" />\n            {\n                data.map((props, idx) => (\n                    <WorkItem key={idx} {...props} idx={idx} />\n                ))\n            }\n        </Stack>\n    );\n};"],"names":["TitleBox","styled","id","sx","props","variant","display","fontSize","fontFamily","titleFont","fontWeight","theme","lineHeight","textAlign","TypeTitle","title","useEffect","typingTitle","window","Typed","strings","typeSpeed","cursorChar","startDelay","destroy","WorkImg","maxWidth","height","breakpoints","up","width","TextBox","Box","paddingLeft","textTransform","NoWrapSpan","whiteSpace","WorkItem","image","company","time","href","targetRef","useRef","scrollYProgress","useScroll","target","offset","y","useTransform","scale","opacity","motion","style","Stack","direction","spacing","ref","justifyContent","alignItems","paddingRight","src","alt","Link","color","Work","data","idx"],"sourceRoot":""}