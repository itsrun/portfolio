{"version":3,"file":"static/js/40.4e4ab604.chunk.js","mappings":"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","sources":["components/Lazy/LazyImage.js","components/Life/Life.js","components/TypeText.js"],"sourcesContent":["import { useInView } from \"framer-motion\";\nimport { useEffect, useRef, useState } from \"react\";\n\nexport default function LazyImage({ src, alt, margin, trim, ...props }) {\n    const ref = useRef();\n    const inView = useInView(ref, {\n        once: true,\n        margin: `0px 0px ${margin}px 0px`,\n    });\n    const [dataSrc, setDataSrc] = useState(`${src}?tr=w-${trim}`);\n\n    useEffect(() => {\n        inView && setDataSrc(src);\n    }, [inView, src]);\n\n    return (\n        <img\n            ref={ref}\n            src={dataSrc}\n            alt={alt}\n            {...props}\n        />\n    );\n};","import { Fragment, useRef } from \"react\";\nimport TypeTitle from \"../TypeText\";\nimport { styled } from \"@mui/material/styles\";\nimport Browser, { Chrome } from \"react-browser-ui\";\nimport { Box, CircularProgress, IconButton, Typography, useMediaQuery } from \"@mui/material\";\nimport data from \"./LifeData.json\";\nimport { ImageList, ImageListItem, ImageListItemBar } from \"@mui/material\";\nimport LazyImage from \"components/Lazy/LazyImage\";\nimport { motion, useScroll, useTransform } from \"framer-motion\";\nimport CameraIcon from '@mui/icons-material/Camera';\nconst { Tab, Divider, AddButton } = Chrome;\n\nconst BrowserContainer = styled(Box)(({ theme }) => ({\n    fontWeight: 500,\n    backgroundColor: \"#fff\",\n    color: \"#111\",\n    cursor: \"default\",\n    overflow: \"hidden\",\n    borderRadius: \"1.2rem\",\n    margin: theme.spacing(4, 0, 8),\n    position: \"relative\",\n}));\n\nconst BrowserTabBox = styled(Box)(({ theme }) => ({\n    position: \"relative\",\n    zIndex: 1,\n    backgroundColor: \"transparent\",\n    overflow: \"auto\",\n    colorScheme: \"light\",\n    \"& .MuiImageList-root\": {\n        marginBottom: 0,\n    },\n}));\n\nconst LifeImgItem = ({ alt, src, place, idx }) => {\n    const itemRef = useRef();\n    const { scrollYProgress } = useScroll({\n        target: itemRef,\n        offset: [\"start end\", \"end end\"],\n    });\n\n    const margin = 368 - 16 * idx;\n\n    const y = useTransform(scrollYProgress, [0, 1], [margin, 0]);\n    const opacity = useTransform(scrollYProgress, [0, 0.4, 1], [0, 0.1, 1]);\n\n    return (\n        <ImageListItem key={alt} sx={{ overflow: \"visible\" }} ref={itemRef}>\n            <motion.div whileHover={{ scale: 1.1 }} style={{ y, opacity, borderRadius: \"1.6rem\", overflow: \"hidden\" }}>\n                <LazyImage src={src} alt={alt} margin={margin + 128} trim={1} width=\"100%\" />\n                <ImageListItemBar\n                    title={alt}\n                    subtitle={`@${place}`}\n                    actionIcon={\n                        <IconButton href={src} sx={{ marginTop: 0.5 }}>\n                            <CameraIcon />\n                        </IconButton>\n                    }\n                    position=\"below\"\n                    sx={(theme) => ({\n                        fontSize: \"1.2rem\",\n                        [theme.breakpoints.up(\"md\")]: {\n                            fontSize: \"1.35rem\",\n                        },\n                        \".MuiImageListItemBar-title\": {\n                            fontSize: \"1em\",\n                            lineHeight: 1.4,\n                        },\n                        \".MuiImageListItemBar-subtitle\": {\n                            fontSize: \"0.9em\",\n                            color: \"#cacaca\",\n                        },\n                    })}\n                />\n            </motion.div>\n        </ImageListItem>\n    );\n};\n\nexport default function Life(props) {\n    const smbk = useMediaQuery(\"(min-width: 480px)\");\n    return (\n        <Fragment>\n            <TypeTitle title=\"aside from work, i enjoy\" id=\"gallery\" />\n            <BrowserContainer>\n                <Browser\n                    type=\"chrome\"\n                    showHeader={false}\n                    activeTabKey=\"hkp\"\n                    tabEnd={(\n                        <Fragment>\n                            <Divider />\n                            <AddButton />\n                        </Fragment>\n                    )}\n                >\n                    <Tab key=\"hkp\" title=\"my spotify playlist\">\n                        <BrowserTabBox sx={{ minHeight: \"64vh\" }}>\n                            <iframe\n                                title=\"My Spotify Playlist\"\n                                style={{\n                                    marginBottom: -4,\n                                    height: \"max(36rem, 64vh)\",\n                                }}\n                                src=\"https://open.spotify.com/embed/playlist/7hBSqiY7yd1KdJrSAnA4oG?utm_source=generator\" width=\"100%\"\n                                frameBorder={0} allowFullScreen=\"\" allow=\"autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture\" loading=\"lazy\"\n                            />\n                        </BrowserTabBox>\n                    </Tab>\n                    <Tab key=\"san\" title=\"a blend w/ my friends :)\">\n                        <BrowserTabBox>\n                            <iframe\n                                title=\"Mangolime + Flamboyant\"\n                                style={{\n                                    marginBottom: -4,\n                                    height: \"max(36rem, 64vh)\",\n                                }}\n                                src=\"https://open.spotify.com/embed/playlist/37i9dQZF1EJJf1yNS86eOl?utm_source=generator\" width=\"100%\"\n                                frameBorder={0} allowFullScreen=\"\" allow=\"autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture\" loading=\"lazy\"\n                            />\n                        </BrowserTabBox>\n                    </Tab>\n                </Browser>\n                <Box sx={{\n                    position: \"absolute\",\n                    top: \"50%\",\n                    left: \"50%\",\n                    transform: \"translate(-50%, -50%)\",\n                    zIndex: 0,\n                }} >\n                    <CircularProgress color=\"secondary\" />\n                </Box>\n            </BrowserContainer>\n            <Typography sx={{\n                textAlign: \"center\",\n                display: \"block\",\n                fontSize: \"1.2rem\",\n                color: \"#aaa\",\n            }}>\n                not exactly good at taking photos, but still wanted to put something here anyway <span style={{ display: \"inline-block\" }}>¯\\_(ツ)_/¯</span>\n            </Typography>\n            <ImageList variant=\"masonry\" cols={smbk ? 2 : 1} gap={\"max(3.2rem, 6.4vw)\"} sx={{\n                marginTop: 8,\n                overflow: \"visible\",\n            }}>\n                {data.map((props, idx) => (\n                    <LifeImgItem key={idx} idx={idx} {...props} />\n                ))}\n            </ImageList>\n        </Fragment>\n    );\n};","import { Box, Typography } from \"@mui/material\";\nimport { styled } from \"@mui/material/styles\";\nimport { useEffect } from \"react\";\nimport { titleFont } from \"theme\";\n\nconst TitleBox = styled(({ id, sx, ...props }) => (\n    <Box {...props}>\n        <Typography\n            variant=\"h2\"\n            id={id}\n            sx={{\n                display: \"inline\",\n                fontSize: \"inherit\",\n                fontFamily: titleFont,\n                fontWeight: 500,\n                ...sx\n            }}\n        />\n    </Box>\n))(({ theme }) => ({\n    fontSize: \"3.6rem\",\n    lineHeight: 1.2,\n    textAlign: \"center\",\n    \"& .typed-cursor\": {\n        fontSize: \"inherit\",\n    },\n}));\n\nexport default function TypeTitle({ title, id, sx }) {\n    useEffect(() => {\n        const typingTitle = new window.Typed(`#${id}`, {\n            strings: [title],\n            typeSpeed: 36,\n            cursorChar: \"_\",\n            startDelay: 640,\n        });\n\n        return () => typingTitle.destroy();\n    }, [title, id]);\n\n    return (\n        <TitleBox id={id} sx={sx} />\n    );\n};"],"names":["LazyImage","src","alt","margin","trim","props","ref","useRef","inView","useInView","once","useState","dataSrc","setDataSrc","useEffect","Tab","Chrome","Divider","AddButton","BrowserContainer","styled","Box","fontWeight","backgroundColor","color","cursor","overflow","borderRadius","theme","spacing","position","BrowserTabBox","zIndex","colorScheme","marginBottom","LifeImgItem","place","idx","itemRef","scrollYProgress","useScroll","target","offset","y","useTransform","opacity","ImageListItem","sx","motion","whileHover","scale","style","width","ImageListItemBar","title","subtitle","actionIcon","IconButton","href","marginTop","Camera","fontSize","breakpoints","up","lineHeight","Life","smbk","useMediaQuery","Fragment","id","type","showHeader","activeTabKey","tabEnd","minHeight","height","frameBorder","allowFullScreen","allow","loading","top","left","transform","CircularProgress","Typography","textAlign","display","ImageList","variant","cols","gap","data","TitleBox","fontFamily","titleFont","TypeTitle","typingTitle","window","Typed","strings","typeSpeed","cursorChar","startDelay","destroy"],"sourceRoot":""}